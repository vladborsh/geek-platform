{
  "name": "geek-platform",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "postinstall": "node ./decorate-angular-cli.js && ngcc --properties es2015 browser module main --first-only --create-ivy-entry-points && npm run schematic:install",
    "nx": "nx",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "nx workspace-lint",
    "e2e": "ng e2e",
    "geek-platform:start": "ng serve geek-platform",
    "geek-platform:build": "ng build geek-platform --configuration=production",
    "geek-platform:test": "ng test geek-platform",
    "geek-platform:lint": "ng lint geek-platform",
    "geek-platform-api:start": "env-cmd ng serve geek-platform-api",
    "geek-platform-api:build": "ng build geek-platform-api --configuration=production",
    "geek-platform-api:test": "ng test geek-platform-api",
    "geek-platform-api:lint": "ng lint geek-platform-api",
    "app:lint": "npm run geek-platform:lint && npm run geek-platform-api:lint",
    "app:test": "npm run geek-platform:test && npm run geek-platform-api:test",
    "app:build": "npm run geek-platform:build && npm run geek-platform-api:build",
    "app:run": "NODE_ENV=production && node dist/apps/geek-platform-api/main.js",
    "app:docker-build": "docker image build -t geek-platform -f Dockerfile .",
    "app:docker-run": "docker run --rm -d --env-file .env.docker -p 4001:4001/tcp geek-platform:latest",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "ng update @nrwl/workspace",
    "workspace-schematic": "nx workspace-schematic",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "schematic:install": "cd tools/schematics && npm i && npm run build && cd ../.. && npm run schematic:link",
    "schematic:link": "npm install tools/schematics/dist/platform-schematic --no-save --no-package-lock"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^10.0.0",
    "@angular/common": "^10.0.0",
    "@angular/compiler": "^10.0.0",
    "@angular/core": "^10.0.0",
    "@angular/forms": "^10.0.0",
    "@angular/platform-browser": "^10.0.0",
    "@angular/platform-browser-dynamic": "^10.0.0",
    "@angular/router": "^10.0.0",
    "@nestjs/common": "^7.0.0",
    "@nestjs/core": "^7.0.0",
    "@nestjs/jwt": "^7.1.0",
    "@nestjs/mongoose": "^7.0.2",
    "@nestjs/passport": "^7.1.0",
    "@nestjs/platform-express": "^7.0.0",
    "@nestjs/serve-static": "^2.1.3",
    "@nrwl/angular": "10.0.10",
    "mongoose": "^5.9.28",
    "nodemailer": "^6.4.11",
    "passport": "^0.4.1",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "~6.5.5",
    "zone.js": "^0.10.2"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.1000.0",
    "@angular/cli": "~10.0.0",
    "@angular/compiler-cli": "^10.0.0",
    "@angular/language-service": "^10.0.0",
    "@nestjs/schematics": "^7.0.0",
    "@nestjs/testing": "^7.0.0",
    "@nrwl/cypress": "10.0.10",
    "@nrwl/jest": "10.0.10",
    "@nrwl/nest": "10.0.10",
    "@nrwl/node": "10.0.10",
    "@nrwl/workspace": "10.0.10",
    "@types/jest": "25.1.4",
    "@types/lodash": "^4.14.159",
    "@types/mongoose": "^5.7.36",
    "@types/node": "~8.9.4",
    "@types/passport-jwt": "^3.0.3",
    "codelyzer": "~5.0.1",
    "cypress": "^4.1.0",
    "dotenv": "6.2.0",
    "env-cmd": "^10.1.0",
    "eslint": "6.8.0",
    "husky": "^4.2.5",
    "jest": "25.2.3",
    "jest-preset-angular": "8.1.2",
    "lint-staged": "^10.2.11",
    "prettier": "2.0.4",
    "ts-jest": "25.2.1",
    "ts-mockito": "^2.6.1",
    "ts-node": "~7.0.0",
    "tslint": "~6.0.0",
    "typescript": "~3.9.3"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged --config ./lint-staged.config.js && npm run app:test && npm run app:build"
    }
  }
}
